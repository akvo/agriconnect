"""sync all models with database

Revision ID: 210c4ffd9146
Revises: d5d07efcb1a7
Create Date: 2025-09-22 00:39:07.656553

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "210c4ffd9146"
down_revision: Union[str, None] = "d5d07efcb1a7"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # Create enum type first
    messagetype_enum = postgresql.ENUM("REPLY", "WHISPER", name="messagetype")
    messagetype_enum.create(op.get_bind())

    op.create_table(
        "knowledge_bases",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column("filename", sa.String(), nullable=False),
        sa.Column("title", sa.String(), nullable=False),
        sa.Column("description", sa.Text(), nullable=True),
        sa.Column(
            "extra_data",
            postgresql.JSONB(astext_type=sa.Text()),
            nullable=True,
        ),
        sa.Column(
            "status",
            sa.Enum(
                "QUEUED", "DONE", "FAILED", "TIMEOUT", name="callbackstage"
            ),
            nullable=True,
        ),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=True,
        ),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=True),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_knowledge_bases_id"), "knowledge_bases", ["id"], unique=False
    )
    op.add_column(
        "messages",
        sa.Column(
            "message_type",
            sa.Enum("REPLY", "WHISPER", name="messagetype"),
            nullable=True,
        ),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column("messages", "message_type")
    op.drop_index(op.f("ix_knowledge_bases_id"), table_name="knowledge_bases")
    op.drop_table("knowledge_bases")
    # Drop enum type
    messagetype_enum = postgresql.ENUM(name="messagetype")
    messagetype_enum.drop(op.get_bind())
    # dropdown enum type
    callbackstage_enum = postgresql.ENUM(name="callbackstage")
    callbackstage_enum.drop(op.get_bind())
    # ### end Alembic commands ###
