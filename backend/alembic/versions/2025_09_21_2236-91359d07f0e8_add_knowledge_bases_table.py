"""Add knowledge bases table

Revision ID: 91359d07f0e8
Revises: d5d07efcb1a7
Create Date: 2025-09-21 22:36:21.707904

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '91359d07f0e8'
down_revision: Union[str, None] = 'd5d07efcb1a7'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    # Create the MessageType enum first
    messagetype_enum = sa.Enum('REPLY', 'WHISPER', name='messagetype')
    messagetype_enum.create(op.get_bind(), checkfirst=True)

    # Add message_type column to messages table
    op.add_column('messages', sa.Column('message_type', messagetype_enum, nullable=True))

    # Use existing callbackstage enum (created in previous migration)
    callbackstage_enum = sa.Enum('QUEUED', 'DONE', 'FAILED', 'TIMEOUT', name='callbackstage')

    # Create knowledge_bases table
    op.create_table('knowledge_bases',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('user_id', sa.Integer(), nullable=False),
        sa.Column('filename', sa.String(), nullable=False),
        sa.Column('title', sa.String(), nullable=False),
        sa.Column('description', sa.Text(), nullable=True),
        sa.Column('extra_data', sa.dialects.postgresql.JSONB(astext_type=sa.Text()), nullable=True),
        sa.Column('status', callbackstage_enum, nullable=True),
        sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
        sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
        sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
        sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_knowledge_bases_id'), 'knowledge_bases', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_knowledge_bases_id'), table_name='knowledge_bases')
    op.drop_table('knowledge_bases')
    op.drop_column('messages', 'message_type')

    # Drop only the messagetype enum (callbackstage is shared)
    sa.Enum('REPLY', 'WHISPER', name='messagetype').drop(op.get_bind(), checkfirst=True)
    # ### end Alembic commands ###
